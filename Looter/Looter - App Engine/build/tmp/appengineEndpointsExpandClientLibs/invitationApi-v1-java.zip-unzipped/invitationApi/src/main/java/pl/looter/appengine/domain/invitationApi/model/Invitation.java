/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-04-08 17:16:44 UTC)
 * on 2016-04-20 at 23:12:15 UTC 
 * Modify at your own risk.
 */

package pl.looter.appengine.domain.invitationApi.model;

/**
 * Model definition for Invitation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the invitationApi. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Invitation extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long eventId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long inviteeId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long inviterId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime sendTime;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getEventId() {
    return eventId;
  }

  /**
   * @param eventId eventId or {@code null} for none
   */
  public Invitation setEventId(java.lang.Long eventId) {
    this.eventId = eventId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Invitation setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getInviteeId() {
    return inviteeId;
  }

  /**
   * @param inviteeId inviteeId or {@code null} for none
   */
  public Invitation setInviteeId(java.lang.Long inviteeId) {
    this.inviteeId = inviteeId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getInviterId() {
    return inviterId;
  }

  /**
   * @param inviterId inviterId or {@code null} for none
   */
  public Invitation setInviterId(java.lang.Long inviterId) {
    this.inviterId = inviterId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getSendTime() {
    return sendTime;
  }

  /**
   * @param sendTime sendTime or {@code null} for none
   */
  public Invitation setSendTime(com.google.api.client.util.DateTime sendTime) {
    this.sendTime = sendTime;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * @param status status or {@code null} for none
   */
  public Invitation setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public Invitation set(String fieldName, Object value) {
    return (Invitation) super.set(fieldName, value);
  }

  @Override
  public Invitation clone() {
    return (Invitation) super.clone();
  }

}
